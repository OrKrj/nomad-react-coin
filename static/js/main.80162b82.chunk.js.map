{"version":3,"sources":["icons/ crypto_currency.png","api.ts","routes/Coin.tsx","routes/Coins.tsx","routes/chart.tsx","routes/price.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["module","exports","BASE_URL","fetchCoins","fetch","concat","then","response","json","fetchCoinHistory","coinId","Container","styled","div","_templateObject","_taggedTemplateLiteral","props","theme","textColor","Header","header","_templateObject2","Title","h1","_templateObject3","accentColor","Loader","span","_templateObject4","Overview","_templateObject5","listColor","listBorder","OverviewItem","_templateObject6","Description","p","_templateObject7","Tabs","_templateObject8","Tab","_templateObject9","isActive","Coin","_ref","isDark","useParams","state","useLocation","chartMatch","useMatch","priceMatch","coinPageMatch","isLoading","infoLoading","data","infoData","useQuery","fetchCoinInfo","tickersLoading","tickersData","fetchCoinTickers","loading","React","createElement","Helmet","name","Fragment","rank","symbol","quotes","USD","price","toFixed","description","total_supply","max_supply","Link","to","Outlet","context","CoinList","ul","li","bgColor","Img","img","Coins","slice","map","coin","id","src","toLowerCase","onError","e","currentTarget","defaultCoinImg","Chart","useOutletContext","options","setoptions","useState","mode","chart","type","background","toolbar","show","xaxis","yaxis","tooltip","enabled","useEffect","prevOptions","series","setSeries","x","Date","time_close","toISOString","y","parseFloat","open","high","low","close","ReactApexChart","height","Price","setOptions","width","grid","row","colors","opacity","stroke","curve","axisBorder","axisTicks","labels","categories","fill","gradient","gradientToColors","stops","Number","console","log","ApexChart","Router","BrowserRouter","basename","process","Routes","Route","path","element","DarkTheme","LightTheme","GlobalStyle","createGlobalStyle","Toggle","button","App","setIsDark","ThemeProvider","onClick","toggleTheme","prev","ReactQueryDevtools","initialIsOpen","queryClient","QueryClient","ReactDOM","createRoot","document","getElementById","render","StrictMode","QueryClientProvider","client"],"mappings":"oHAAAA,EAAOC,QAAU,IAA0B,8C,qJCA3C,MAAMC,EAAQ,iCAEP,SAASC,IACd,OAAOC,MAAM,GAADC,OAAIH,EAAQ,WAAUI,KAAMC,GAAaA,EAASC,QAezD,SAASC,EAAiBC,GAC/B,OAAON,MAAM,oDAADC,OAC0CK,IACpDJ,KAAMC,GAAaA,EAASC,Q,8BCbhC,MAAMG,EAAYC,IAAOC,IAAGC,MAAAC,YAAA,sFAIhBC,GAAUA,EAAMC,MAAMC,WAG5BC,EAASP,IAAOQ,OAAMC,MAAAN,YAAA,iGAOtBO,EAAQV,IAAOW,GAAEC,MAAAT,YAAA,iEAGXC,GAAUA,EAAMC,MAAMQ,aAG5BC,EAASd,IAAOe,KAAIC,MAAAb,YAAA,kHAQpBc,EAAWjB,IAAOC,IAAGiB,MAAAf,YAAA,gOAKJC,GAAUA,EAAMC,MAAMc,UAItBf,GAAUA,EAAMC,MAAMe,YAGvCC,EAAerB,IAAOC,IAAGqB,MAAAnB,YAAA,4OAazBoB,EAAcvB,IAAOwB,EAACC,MAAAtB,YAAA,+BAsCtBuB,EAAO1B,IAAOC,IAAG0B,MAAAxB,YAAA,yGAOjByB,EAAM5B,IAAOe,KAAIc,MAAA1B,YAAA,wPAKAC,GAAUA,EAAMC,MAAMc,UAGtBf,GAAUA,EAAMC,MAAMe,WACjChB,GACRA,EAAM0B,SAAW1B,EAAMC,MAAMQ,YAAcT,EAAMC,MAAMC,WA8G5CyB,I,cAAAA,EApGf,SAAaC,GAA0B,IAAzB,OAAEC,GAAoBD,EAClC,MAAM,OAAElC,GAAWoC,eACb,MAAEC,GAAUC,cAEZC,EAAaC,YAAS,kBACtBC,EAAaD,YAAS,kBACtBE,EAAgBF,YAAS,UAqBvBG,UAAWC,EAAaC,KAAMC,GAAaC,mBACjD,CAAC,OAAQ/C,GACT,IDrJG,SAAuBA,GAC5B,OAAON,MAAM,GAADC,OAAIH,EAAQ,WAAAG,OAAUK,IAAUJ,KAAMC,GAChDA,EAASC,QCmJHkD,CAAchD,KAEd2C,UAAWM,EAAgBJ,KAAMK,GAAgBH,mBACvD,CAAC,UAAW/C,GACZ,IDnJG,SAA0BA,GAC/B,OAAON,MAAM,GAADC,OAAIH,EAAQ,aAAAG,OAAYK,IAAUJ,KAAMC,GAClDA,EAASC,QCiJHqD,CAAiBnD,IAInBoD,EAAUR,GAAeK,EAE/B,OACEI,IAAAC,cAACrD,EAAS,KACRoD,IAAAC,cAACC,IAAM,KACLF,IAAAC,cAAA,cACQ,OAALjB,QAAK,IAALA,OAAK,EAALA,EAAOmB,QAASJ,EAAU,aAAuB,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAUU,QAGxDH,IAAAC,cAAC7C,EAAM,KACL4C,IAAAC,cAAC1C,EAAK,MACE,OAALyB,QAAK,IAALA,OAAK,EAALA,EAAOmB,QAASJ,EAAU,aAAuB,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAUU,QAGvDJ,EACCC,IAAAC,cAACtC,EAAM,KAAC,cAERqC,IAAAC,cAAAD,IAAAI,SAAA,KACEJ,IAAAC,cAACnC,EAAQ,KACPkC,IAAAC,cAAC/B,EAAY,KACX8B,IAAAC,cAAA,YAAM,SACND,IAAAC,cAAA,YAAe,OAARR,QAAQ,IAARA,OAAQ,EAARA,EAAUY,OAEnBL,IAAAC,cAAC/B,EAAY,KACX8B,IAAAC,cAAA,YAAM,WACND,IAAAC,cAAA,YAAe,OAARR,QAAQ,IAARA,OAAQ,EAARA,EAAUa,SAEnBN,IAAAC,cAAC/B,EAAY,KACX8B,IAAAC,cAAA,YAAM,UACND,IAAAC,cAAA,gBAAA3D,OAAsB,OAAXuD,QAAW,IAAXA,OAAW,EAAXA,EAAaU,OAAOC,IAAIC,MAAMC,QAAQ,OAGrDV,IAAAC,cAAC7B,EAAW,KAAU,OAARqB,QAAQ,IAARA,OAAQ,EAARA,EAAUkB,aACxBX,IAAAC,cAACnC,EAAQ,KACPkC,IAAAC,cAAC/B,EAAY,KACX8B,IAAAC,cAAA,YAAM,iBACND,IAAAC,cAAA,YAAkB,OAAXJ,QAAW,IAAXA,OAAW,EAAXA,EAAae,eAEtBZ,IAAAC,cAAC/B,EAAY,KACX8B,IAAAC,cAAA,YAAM,eACND,IAAAC,cAAA,YAAkB,OAAXJ,QAAW,IAAXA,OAAW,EAAXA,EAAagB,cAIxBb,IAAAC,cAAC1B,EAAI,KACHyB,IAAAC,cAACxB,EAAG,CAACE,SAAyB,OAAfO,GACbc,IAAAC,cAACa,IAAI,CAACC,GAAE,IAAAzE,OAAMK,EAAM,WAAU,UAEhCqD,IAAAC,cAACxB,EAAG,CAACE,SAA4B,OAAlBU,GACbW,IAAAC,cAACa,IAAI,CAACC,GAAI,KAAK,SAEjBf,IAAAC,cAACxB,EAAG,CAACE,SAAyB,OAAfS,GACbY,IAAAC,cAACa,IAAI,CAACC,GAAE,IAAAzE,OAAMK,EAAM,WAAU,WAIlCqD,IAAAC,cAACe,IAAM,CAACC,QAAS,CAAEtE,SAAQmC,e,iBCnNrC,MAAMlC,EAAYC,IAAOC,IAAGC,MAAAC,YAAA,wEAMtBI,EAASP,IAAOQ,OAAMC,MAAAN,YAAA,iGAOtBO,EAAQV,IAAOW,GAAEC,MAAAT,YAAA,iEAGXC,GAAUA,EAAMC,MAAMQ,aAG5BwD,EAAWrE,IAAOsE,GAAEtD,MAAAb,YAAA,gCAIpB4B,EAAO/B,IAAOuE,GAAErD,MAAAf,YAAA,qTACCC,GAAUA,EAAMC,MAAMc,UACjCf,GAAUA,EAAMC,MAAMmE,QACXpE,GAAUA,EAAMC,MAAMe,WAS/BhB,GAAUA,EAAMC,MAAMC,UAIpBF,GAAUA,EAAMC,MAAMQ,aAKhCC,EAASd,IAAOe,KAAIO,MAAAnB,YAAA,kHAQpBsE,EAAMzE,IAAO0E,IAAGjD,MAAAtB,YAAA,kEAgEPwE,MAhDf,WAYE,MAAM,UAAElC,EAAS,KAAEE,GAASE,mBAC1B,WACAtD,GAGF,OACE4D,IAAAC,cAACrD,EAAS,KACRoD,IAAAC,cAACC,IAAM,KACLF,IAAAC,cAAA,aAAO,iBAETD,IAAAC,cAAC7C,EAAM,KACL4C,IAAAC,cAAC1C,EAAK,KAAC,iBAER+B,EACCU,IAAAC,cAACtC,EAAM,KAAC,cAERqC,IAAAC,cAACiB,EAAQ,KACF,OAAJ1B,QAAI,IAAJA,OAAI,EAAJA,EAAMiC,MAAM,EAAG,KAAKC,IAAKC,GACxB3B,IAAAC,cAACrB,EAAI,KACHoB,IAAAC,cAACa,IAAI,CAACC,GAAE,IAAAzE,OAAMqF,EAAKC,IAAM5C,MAAO,CAAEmB,KAAMwB,EAAKxB,OAC3CH,IAAAC,cAACqB,EAAG,CACFO,IAAG,6CAAAvF,OAA+CqF,EAAKrB,OAAOwB,eAC9DC,QAAUC,IACRA,EAAEC,cAAcJ,IAAMK,OAGzBP,EAAKxB,KAAK,sB,iBCHZgC,OA/Ef,WACE,MAAM,OAAExF,EAAM,OAAEmC,GAAWsD,eACrB,UAAE9C,EAAS,KAAEE,GAASE,mBAAwB,CAAC,OAAQ/C,GAAS,IACpED,EAAiBC,KAGZ0F,EAASC,GAAcC,mBAAiC,CAC7DrF,MAAO,CAAEsF,KAAM,SACfC,MAAO,CACLC,KAAM,cACNC,WAAY,UACZC,QAAS,CACPC,MAAM,IAGVC,MAAO,CACLJ,KAAM,YAERK,MAAO,CACLC,QAAS,CACPC,SAAS,GAEXJ,MAAM,KAIVK,oBAAU,KACRZ,EAAYa,IAAW,IAClBA,EACHV,MAAO,CACLE,WAAY7D,EAAS,UAAY,UACjC8D,QAAS,CAAEC,MAAM,IAEnB3F,MAAO,CAAEsF,KAAM1D,EAAS,OAAS,aAElC,CAACA,IAEJ,MAAOsE,EAAQC,GAAad,mBAAoB,CAC9C,CACEpC,KAAM,QACNX,KAAM,MAuBV,OAnBA0D,oBAAU,KACJ1D,GACF6D,EAAU,CACR,CACElD,KAAM,QACNX,KAAU,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMkC,IAAKjB,IAAK,CACpB6C,EAAG,IAAIC,KAAwB,IAAnB9C,EAAM+C,YAAmBC,cACrCC,EAAG,CACDC,WAAWlD,EAAMmD,MACjBD,WAAWlD,EAAMoD,MACjBF,WAAWlD,EAAMqD,KACjBH,WAAWlD,EAAMsD,eAM1B,CAACvE,IAGFQ,IAAAC,cAAA,WACGX,EACCU,IAAAC,cAAA,YAAM,gBAEND,IAAAC,cAAC+D,IAAc,CACbZ,OAAQA,EACRf,QAASA,EACTK,KAAK,cACLuB,OAAQ,QCQHC,OA1Ff,WACE,MAAM,OAAEvH,EAAM,OAAEmC,GAAWsD,eACrB,UAAE9C,EAAS,KAAEE,GAASE,mBAAwB,CAAC,QAAS/C,GAAS,IACrED,EAAiBC,KAEZ0F,EAAS8B,GAAc5B,mBAAiC,CAC7DrF,MAAO,CAAEsF,KAAM,SACfC,MAAO,CACL2B,MAAO,IACPH,OAAQ,IACRrB,QAAS,CACPC,MAAM,GAERF,WAAY,eAEd0B,KAAM,CAAEC,IAAK,CAAEC,OAAQ,CAAC,UAAW,eAAgBC,QAAS,KAC5DC,OAAQ,CACNC,MAAO,WACPN,MAAO,GAETrB,MAAO,CACLF,MAAM,GAERC,MAAO,CACL6B,WAAY,CAAE9B,MAAM,GACpB+B,UAAW,CAAE/B,MAAM,GACnBgC,OAAQ,CAAEhC,MAAM,GAChBH,KAAM,WACNoC,WAAY,IAEdC,KAAM,CACJrC,KAAM,WACNsC,SAAU,CAAEC,iBAAkB,CAAC,WAAYC,MAAO,CAAC,EAAG,QAsC1D,OAlCAhC,oBAAU,KACJ1D,GACF2E,EAAYhB,IAAW,IAClBA,EACHL,MAAO,IACFK,EAAYL,MACfgC,WAAYtF,EAAKkC,IAAKjB,GACpB,IAAI8C,KAAwB,IAAnB9C,EAAM+C,YAAmBC,gBAGtCL,OAAQ,CACN,CACEjD,KAAM,IACNX,KAAMA,EAAKkC,IAAKjB,GAAU0E,OAAO1E,EAAMsD,cAK9C,CAACvE,IAEJ0D,oBAAU,KACRiB,EAAYhB,IAAW,IAClBA,EACHjG,MAAO,CAAEsF,KAAM1D,EAAS,OAAS,SACjCuF,KAAM,CACJC,IAAKxF,EACD,CAAEyF,OAAQ,CAAC,UAAW,eAAgBC,QAAS,IAC/C,CAAED,OAAQ,CAAC,UAAW,eAAgBC,QAAS,SAGtD,CAAC1F,IAEJsG,QAAQC,IAAIvG,GAGVkB,IAAAC,cAAA,WACGX,EACCU,IAAAC,cAAA,YAAM,cAEND,IAAAC,cAACqF,IAAS,CACR5C,KAAK,OACLU,OAAQ,CACN,CACEjD,KAAM,IACNX,KAAU,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMkC,IAAKjB,GAAU0E,OAAO1E,EAAMsD,UAG5C1B,QAASA,MChFJkD,OAdf,SAAe1G,GAA4B,IAA3B,OAAEC,GAAsBD,EACtC,OACEmB,IAAAC,cAACuF,IAAa,CAACC,SAAUC,qBACvB1F,IAAAC,cAAC0F,IAAM,KACL3F,IAAAC,cAAC2F,IAAK,CAACC,KAAK,IAAIC,QAAS9F,IAAAC,cAACuB,EAAK,QAC/BxB,IAAAC,cAAC2F,IAAK,CAACC,KAAK,WAAWC,QAAS9F,IAAAC,cAACrB,EAAI,CAACE,OAAQA,KAC5CkB,IAAAC,cAAC2F,IAAK,CAACC,KAAK,QAAQC,QAAS9F,IAAAC,cAACiE,GAAK,QACnClE,IAAAC,cAAC2F,IAAK,CAACC,KAAK,QAAQC,QAAS9F,IAAAC,cAACkC,GAAK,YCdtC,MAAM4D,GAA0B,CACrC1E,QAAS,UACTrD,UAAW,UACXC,WAAY,UACZd,UAAW,UACXO,YAAa,WAGFsI,GAA2B,CACtC3E,QAAS,UACTrD,UAAW,UACXC,WAAY,UACZd,UAAW,UACXO,YAAa,W,mBCXf,MAAMuI,GAAcC,YAAiBnJ,QAAAC,YAAA,69CAwDZC,GAAUA,EAAMC,MAAMmE,QACjCpE,GAAUA,EAAMC,MAAMC,WAa9BgJ,GAAStJ,IAAOuJ,OAAM9I,QAAAN,YAAA,qHACLC,GAAUA,EAAMC,MAAMmE,QACtBpE,GAAUA,EAAMC,MAAMc,UACjCf,GAAUA,EAAMC,MAAMe,YAqBnBoI,OAhBf,WACE,MAAOvH,EAAQwH,GAAa/D,oBAAS,GAGrC,OACEvC,IAAAC,cAACsG,IAAa,CAACrJ,MAAO4B,EAASiH,GAAYC,IACzChG,IAAAC,cAACgG,GAAW,MACZjG,IAAAC,cAACkG,GAAM,CAACK,QALQC,IAAMH,EAAWI,IAAUA,IAMxC5H,EAAS,aAAe,aAE3BkB,IAAAC,cAACsF,GAAM,CAACzG,OAAQA,IAChBkB,IAAAC,cAAC0G,sBAAkB,CAACC,eAAe,MC1FzC,MAAMC,GAAc,IAAIC,cAEXC,IAASC,WACpBC,SAASC,eAAe,SAGrBC,OACHnH,IAAAC,cAACD,IAAMoH,WAAU,KACfpH,IAAAC,cAACoH,sBAAmB,CAACC,OAAQT,IAC3B7G,IAAAC,cAACoG,GAAG,W","file":"static/js/main.80162b82.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ crypto_currency.9df1c83f.png\";","const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  return fetch(\n    `https://ohlcv-api.nomadcoders.workers.dev?coinId=${coinId}`\n  ).then((response) => response.json());\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { Link, useMatch } from \"react-router-dom\";\nimport { Outlet, useLocation, useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n  color: ${(props) => props.theme.textColor};\n`;\n\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  margin-top: 15px;\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  margin-top: 40px;\n  text-align: center;\n  font-weight: 700;\n  font-size: 20px;\n  display: block;\n`;\n\nconst Overview = styled.div`\n  height: 100px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: ${(props) => props.theme.listColor};\n  margin-top: 20px;\n  padding: 10px 20px;\n  border-radius: 10px;\n  border: 3px solid ${(props) => props.theme.listBorder};\n`;\n\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  span:first-child {\n    font-size: 15px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\n\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\ninterface Info {\n  rank: number;\n  symbol: string;\n  open_source: boolean;\n  description: string;\n  name: string;\n}\n\ninterface Quotes {\n  price: number;\n  volume_24h: number;\n  volume_24h_change_24h: number;\n  market_cap: number;\n  market_cap_change_24h: number;\n  percent_change_15m: number;\n  percent_change_30m: number;\n  percent_change_1h: number;\n  percent_change_6h: number;\n  percent_change_12h: number;\n  percent_change_24h: number;\n  percent_change_7d: number;\n  percent_change_30d: number;\n  percent_change_1y: number;\n  ath_price: number;\n  ath_date: string;\n  percent_from_price_ath: number;\n}\n\ninterface PriceInfo {\n  total_supply: number;\n  max_supply: number;\n  quotes: { USD: Quotes };\n}\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  margin-top: 25px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: ${(props) => props.theme.listColor};\n  padding: 8px 0px;\n  border-radius: 10px;\n  border: 3px solid ${(props) => props.theme.listBorder};\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  }\n`;\n\ninterface ICoinProps {\n  isDark: boolean;\n}\n\nfunction Coin({ isDark }: ICoinProps) {\n  const { coinId } = useParams() as { coinId: string };\n  const { state } = useLocation() as { state: { name: string } };\n\n  const chartMatch = useMatch(\"/:coinId/chart\");\n  const priceMatch = useMatch(\"/:coinId/price\");\n  const coinPageMatch = useMatch(\"/coin\");\n\n  // const [loading, setLoading] = useState(true);\n  // const [info, setInfo] = useState<Info | null>(null);\n  // const [priceInfo, setPriceInfo] = useState<PriceInfo | null>(null);\n\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     const infoData = await (\n  //       await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)\n  //     ).json();\n  //     const priceData = await (\n  //       await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\n  //     ).json();\n  //     setInfo(infoData);\n  //     setPriceInfo(priceData);\n  //     setLoading(false);\n  //   };\n  //   fetchData();\n  // }, [coinId]);\n\n  const { isLoading: infoLoading, data: infoData } = useQuery<Info>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceInfo>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId)\n    // { refetchInterval: 5000 }\n  );\n\n  const loading = infoLoading || tickersLoading;\n\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name || (loading ? \"Loading...\" : infoData?.name)}\n        </title>\n      </Helmet>\n      <Header>\n        <Title>\n          {state?.name || (loading ? \"Loading...\" : infoData?.name)}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>{infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>{`$${tickersData?.quotes.USD.price.toFixed(2)}`}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Supply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={coinPageMatch !== null}>\n              <Link to={\"/\"}>Home</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Outlet context={{ coinId, isDark }} />\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default Coin;\n","import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\nimport defaultCoinImg from \"../icons/ crypto_currency.png\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  margin-top: 15px;\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst CoinList = styled.ul`\n  margin: 30px 15px;\n`;\n\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.listColor};\n  color: ${(props) => props.theme.bgColor};\n  border: 2px solid ${(props) => props.theme.listBorder};\n  padding: 20px;\n  margin-bottom: 12px;\n  border-radius: 15px;\n\n  a {\n    display: flex;\n    align-items: center;\n    transition: color 0.2s ease-in;\n    color: ${(props) => props.theme.textColor};\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Loader = styled.span`\n  margin-top: 40px;\n  text-align: center;\n  font-weight: 700;\n  font-size: 20px;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 20px;\n`;\n\ninterface ApiCoinInterface {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  // const [coins, setCoins] = useState<ApiCoinInterface[]>([]);\n  // const [loading, setLoading] = useState(true);\n  // useEffect(() => {\n  //   (async () => {\n  //     const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\n  //     const json = await response.json();\n  //     setCoins(json.slice(0, 100));\n  //     setLoading(false);\n  //   })();\n  // }, []);\n\n  const { isLoading, data } = useQuery<ApiCoinInterface[]>(\n    \"allCoins\",\n    fetchCoins\n  );\n\n  return (\n    <Container>\n      <Helmet>\n        <title>코인</title>\n      </Helmet>\n      <Header>\n        <Title>코인</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin>\n              <Link to={`/${coin.id}`} state={{ name: coin.name }}>\n                <Img\n                  src={`https://cryptoicon-api.pages.dev/api/icon/${coin.symbol.toLowerCase()}`}\n                  onError={(e) => {\n                    e.currentTarget.src = defaultCoinImg;\n                  }}\n                />\n                {coin.name} 🚀\n              </Link>\n            </Coin>\n          ))}\n        </CoinList>\n      )}\n    </Container>\n  );\n}\n\nexport default Coins;\n","import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useOutletContext } from \"react-router-dom\";\nimport { fetchCoinHistory } from \"../api\";\nimport ReactApexChart from \"react-apexcharts\";\n\ninterface IPriceContext {\n  coinId: string;\n  isDark: boolean;\n}\n\ninterface IHistorical {\n  time_open: number;\n  time_close: number;\n  open: string;\n  high: string;\n  low: string;\n  close: string;\n  volume: string;\n  market_cap: number;\n}\n\ninterface IData {\n  x: string | Date;\n  y: [number, number, number, number];\n}\n\ninterface ISeries {\n  name: string;\n  data: IData[];\n}\n\nfunction Chart() {\n  const { coinId, isDark } = useOutletContext<IPriceContext>();\n  const { isLoading, data } = useQuery<IHistorical[]>([\"ohlc\", coinId], () =>\n    fetchCoinHistory(coinId)\n  );\n\n  const [options, setoptions] = useState<ApexCharts.ApexOptions>({\n    theme: { mode: \"light\" },\n    chart: {\n      type: \"candlestick\",\n      background: \"#f3f3f3\",\n      toolbar: {\n        show: false,\n      },\n    },\n    xaxis: {\n      type: \"datetime\",\n    },\n    yaxis: {\n      tooltip: {\n        enabled: false,\n      },\n      show: false,\n    },\n  });\n\n  useEffect(() => {\n    setoptions((prevOptions) => ({\n      ...prevOptions,\n      chart: {\n        background: isDark ? \"#2f3640\" : \"#f3f3f3\",\n        toolbar: { show: false },\n      },\n      theme: { mode: isDark ? \"dark\" : \"light\" },\n    }));\n  }, [isDark]);\n\n  const [series, setSeries] = useState<ISeries[]>([\n    {\n      name: \"price\",\n      data: [],\n    },\n  ]);\n\n  useEffect(() => {\n    if (data) {\n      setSeries([\n        {\n          name: \"price\",\n          data: data?.map((price) => ({\n            x: new Date(price.time_close * 1000).toISOString(),\n            y: [\n              parseFloat(price.open),\n              parseFloat(price.high),\n              parseFloat(price.low),\n              parseFloat(price.close),\n            ],\n          })),\n        },\n      ]);\n    }\n  }, [data]);\n\n  return (\n    <div>\n      {isLoading ? (\n        <span>\"Loading...\"</span>\n      ) : (\n        <ReactApexChart\n          series={series}\n          options={options}\n          type=\"candlestick\"\n          height={300}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport { useOutletContext } from \"react-router-dom\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface IChartContext {\n  coinId: string;\n  isDark: boolean;\n}\n\ninterface IHistorical {\n  time_open: number;\n  time_close: number;\n  open: string;\n  high: string;\n  low: string;\n  close: string;\n  volume: string;\n  market_cap: number;\n}\n\nfunction Price() {\n  const { coinId, isDark } = useOutletContext<IChartContext>();\n  const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () =>\n    fetchCoinHistory(coinId)\n  );\n  const [options, setOptions] = useState<ApexCharts.ApexOptions>({\n    theme: { mode: \"light\" },\n    chart: {\n      width: 500,\n      height: 500,\n      toolbar: {\n        show: false,\n      },\n      background: \"transparent\",\n    },\n    grid: { row: { colors: [\"#f3f3f3\", \"transparent\"], opacity: 0.7 } },\n    stroke: {\n      curve: \"straight\",\n      width: 4,\n    },\n    yaxis: {\n      show: false,\n    },\n    xaxis: {\n      axisBorder: { show: false },\n      axisTicks: { show: false },\n      labels: { show: false },\n      type: \"datetime\",\n      categories: [],\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: { gradientToColors: [\"#0be881\"], stops: [0, 50] },\n    },\n  });\n\n  useEffect(() => {\n    if (data) {\n      setOptions((prevOptions) => ({\n        ...prevOptions,\n        xaxis: {\n          ...prevOptions.xaxis,\n          categories: data.map((price) =>\n            new Date(price.time_close * 1000).toISOString()\n          ),\n        },\n        series: [\n          {\n            name: \"$\",\n            data: data.map((price) => Number(price.close)),\n          },\n        ],\n      }));\n    }\n  }, [data]);\n\n  useEffect(() => {\n    setOptions((prevOptions) => ({\n      ...prevOptions,\n      theme: { mode: isDark ? \"dark\" : \"light\" },\n      grid: {\n        row: isDark\n          ? { colors: [\"#2C3A47\", \"transparent\"], opacity: 0.5 }\n          : { colors: [\"#f3f3f3\", \"transparent\"], opacity: 0.7 },\n      },\n    }));\n  }, [isDark]);\n\n  console.log(isDark);\n\n  return (\n    <div>\n      {isLoading ? (\n        <span>Loading...</span>\n      ) : (\n        <ApexChart\n          type=\"line\"\n          series={[\n            {\n              name: \"$\",\n              data: data?.map((price) => Number(price.close)) as number[],\n            },\n          ]}\n          options={options}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Price;\n","import React from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\nimport Chart from \"./routes/chart\";\nimport Price from \"./routes/price\";\n\ninterface IRouterProps {\n  isDark: boolean;\n}\n\nfunction Router({ isDark }: IRouterProps) {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Routes>\n        <Route path=\"/\" element={<Coins />} />\n        <Route path=\"/:coinId\" element={<Coin isDark={isDark} />}>\n          <Route path=\"price\" element={<Price />} />\n          <Route path=\"chart\" element={<Chart />} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n","import { DefaultTheme } from \"styled-components/dist/types\";\nimport React from \"react\";\nimport \"styled-components\";\n\nexport const DarkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  listColor: \"#2C3A47\",\n  listBorder: \"#c8d6e5\",\n  textColor: \"#f5f6fa\",\n  accentColor: \"#4cd137\",\n};\n\nexport const LightTheme: DefaultTheme = {\n  bgColor: \"#f5f6fa\",\n  listColor: \"#c8d6e5\",\n  listBorder: \"#2C3A47\",\n  textColor: \"#2f3640\",\n  accentColor: \"#4cd137\",\n};\n","import styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport React, { useState } from \"react\";\nimport { DarkTheme, LightTheme } from \"./theme\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nconst GlobalStyle = createGlobalStyle` \n  @import url('https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,500;1,500&display=swap');\n  html, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\n  * {\n    box-sizing: border-box;\n  }\n  \n  body {\n    font-family: 'Noto Sans';\n    background-color: ${(props) => props.theme.bgColor};\n    color: ${(props) => props.theme.textColor};\n  }\n\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n\n  button {\n    \n  }\n`;\n\nconst Toggle = styled.button`\n  background-color: ${(props) => props.theme.bgColor};\n  border: 1px solid ${(props) => props.theme.listColor};\n  color: ${(props) => props.theme.listBorder};\n  margin-left: auto;\n  display: block;\n`;\n\nfunction App() {\n  const [isDark, setIsDark] = useState(false);\n  const toggleTheme = () => setIsDark((prev) => !prev);\n\n  return (\n    <ThemeProvider theme={isDark ? DarkTheme : LightTheme}>\n      <GlobalStyle />\n      <Toggle onClick={toggleTheme}>\n        {isDark ? \"Light Mode\" : \"Dark Mode\"}\n      </Toggle>\n      <Router isDark={isDark} />\n      <ReactQueryDevtools initialIsOpen={false} />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst queryClient = new QueryClient();\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\n\nroot.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}